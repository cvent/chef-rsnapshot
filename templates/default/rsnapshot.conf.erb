# Automatically generated by Chef. Local changes will be overwritten.
#
#################################################
# rsnapshot.conf - rsnapshot configuration file #
#################################################
#                                               #
# PLEASE BE AWARE OF THE FOLLOWING RULES:       #
#                                               #
# This file requires tabs between elements      #
#                                               #
# Directories require a trailing slash:         #
#   right: /home/                               #
#   wrong: /home                                #
#                                               #
#################################################

config_version	1.2

<% if @node[:rsnapshot][:root] %>
snapshot_root	<%= @node[:rsnapshot][:root] %>
<% end -%>

cmd_cp	/bin/cp
cmd_rm	/bin/rm
cmd_rsync	/usr/bin/rsync
cmd_ssh	/usr/bin/ssh
cmd_logger	/usr/bin/logger

<% if @node[:rsnapshot][:intervals] %>
  <% @node[:rsnapshot][:intervals].each do |period, retain| -%>
interval	<%= period %>	<%= retain %>
  <% end -%>
<% end -%>

# Verbose level, 1 through 5.
# 1     Quiet           Print fatal errors only
# 2     Default         Print errors and warnings only
# 3     Verbose         Show equivalent shell commands being executed
# 4     Extra Verbose   Show extra verbose information
# 5     Debug mode      Everything
#
<% if @node[:rsnapshot][:verbosity] %>
verbose	<%= @node[:rsnapshot][:verbosity] %>
<% end -%>

# Same as "verbose" above, but controls the amount of data sent to the
# logfile, if one is being used. The default is 3.
#
<% if @node[:rsnapshot][:loglevel] %>
loglevel	<%= @node[:rsnapshot][:loglevel] %>
<% end -%>

lockfile	/var/run/rsnapshot.pid

<% if @node[:rsnapshot][:rsync_short_args] %>
rsync_short_args	<%= @node[:rsnapshot][:rsync_short_args] %>
<% end -%>
<% if @node[:rsnapshot][:rsync_long_args] %>
rsync_long_args	<%= @node[:rsnapshot][:rsync_long_args] %>
<% end -%>

<% if @node[:rsnapshot][:backups] %>
  <% @node[:rsnapshot][:backups].each do |backup| %>
backup	<%= backup.source %>	<%= backup.config.target %>	<%= backup.config.params %>
  <% end %>
<% end %>
